[
    {
        "Conversation ID": 1,
        "Timestamp": "2025-03-19 10:15:00",
        "Customer Query": "I want to check my credit card application status.",
        "Agent Response": "Sure, can I have your application ID?",
        "Intent": "Check Application Status",
        "Sentiment": "Neutral",
        "Resolution Status": "Open"
    },
    {
        "Conversation ID": 2,
        "Timestamp": "2025-03-19 10:18:00",
        "Customer Query": "I applied last week but haven't received any update.",
        "Agent Response": "Let me check your application progress. One moment.",
        "Intent": "Application Delay",
        "Sentiment": "Frustrated",
        "Resolution Status": "In Progress"
    },
    {
        "Conversation ID": 3,
        "Timestamp": "2025-03-19 11:00:00",
        "Customer Query": "There is an unauthorized charge on my credit card. What should I do?",
        "Agent Response": "I understand your concern. I can help you dispute the charge. Can you provide the transaction details?",
        "Intent": "Dispute Transaction",
        "Sentiment": "Angry",
        "Resolution Status": "Pending Investigation"
    }
]


"How do I check my credit card application status?"

ðŸ’¡ Expected RAG Response:
"To check your credit card application status, you need to provide your application ID. Please share your application ID to proceed."
(Based on Record 1)

"I applied for a credit card last week but got no update. What should I do?"

ðŸ’¡ Expected RAG Response:
"If you haven't received an update, we can check your application progress. Let me check and provide you with the latest status."

"I noticed a transaction I didnâ€™t make. How do I dispute it?"

ðŸ’¡ Expected RAG Response:
"I understand your concern. To dispute an unauthorized charge, please provide the transaction details. I will help you initiate an investigation."
(Based on Record 3)




script_dir = os.path.dirname(os.path.abspath(__file__))
file_path = os.path.join(script_dir, "customer_discussions.json")
# Load JSON data
with open("customer_discussions.json", "r") as file:
    data = json.load(file)

# Combine conversations into text chunks
texts = [
    f"Customer: {entry['Customer Query']} \nAgent: {entry['Agent Response']}"
    for entry in data
]

# Chunking the text (200 characters per chunk)
splitter = RecursiveCharacterTextSplitter(chunk_size=200, chunk_overlap=50)
chunks = splitter.split_text("\n\n".join(texts))
