from exchangelib.folders import SingleFolderQuerySet, Folder

def search_subfolders(account, folder_path):
  """
  Searches for a folder by path within the Exchange account.

  Args:
      account (exchangelib.Account): The Exchange account object.
      folder_path (str): The path of the folder to search for (e.g., "inbox/processed").

  Returns:
      exchangelib.Folder: The found folder object or None if not found.
  """
  folder_names = folder_path.split("/")  # Split path into folder names

  # Start with the root folder
  current_folder = account.root

  # Iterate through each folder name in the path
  for folder_name in folder_names:
    # Use SingleFolderQuerySet to search within current folder
    folder_queryset = SingleFolderQuerySet(account=account, folder=current_folder)
    try:
      current_folder = folder_queryset.get(name=folder_name)
      if not current_folder:
        # Folder not found at this level, exit the loop
        return None
    except Exception as e:
      print(f"Error searching folder: {e}")
      return None

  # Reached the end of the path, return the final folder
  return current_folder

# Example usage
account = # Your Exchange account object
folder_path = "inbox/processed/reports"

found_folder = search_subfolders(account, folder_path)

if found_folder:
  print("Folder found:", found_folder.name)
else:
  print("Folder not found.")
