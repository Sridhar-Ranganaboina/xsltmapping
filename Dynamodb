import software.amazon.awssdk.services.dynamodb.DynamoDbClient;
import software.amazon.awssdk.regions.Region;
import software.amazon.awssdk.enhanced.dynamodb.*;
import software.amazon.awssdk.enhanced.dynamodb.model.*;
import software.amazon.awssdk.enhanced.dynamodb.Key;

public class QueryBySessionIdEnhanced {
    public static void main(String[] args) {
        String tableName = "YourTableName";
        String indexName = "sessionId-index";
        String sessionIdValue = "your-session-id";

        // Create DynamoDB client
        DynamoDbClient dynamoDb = DynamoDbClient.builder()
                .region(Region.US_EAST_1)
                .build();

        // Create Enhanced client
        DynamoDbEnhancedClient enhancedClient = DynamoDbEnhancedClient.builder()
                .dynamoDbClient(dynamoDb)
                .build();

        // Create table and index references
        DynamoDbTable<SessionRecord> table = enhancedClient.table(tableName, TableSchema.fromBean(SessionRecord.class));
        DynamoDbIndex<SessionRecord> sessionIdIndex = table.index(indexName);

        // Build query request
        QueryEnhancedRequest queryRequest = QueryEnhancedRequest.builder()
                .queryConditional(QueryConditional.keyEqualTo(Key.builder().partitionValue(sessionIdValue).build()))
                .build();

        // Execute query
        sessionIdIndex.query(queryRequest).items().forEach(item -> {
            System.out.println("Found item: " + item.getId() + ", sessionId: " + item.getSessionId());
        });

        dynamoDb.close();
    }
}
