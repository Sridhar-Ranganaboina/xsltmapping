function getDateRangeFromOption(option: string): { startDate: string; endDate: string } {
    const today = new Date();
    let startDate: Date;
    let endDate: Date = today;

    switch (option) {
        case 'Last 7 days':
            startDate = new Date(today);
            startDate.setDate(today.getDate() - 6); // includes today as day 1
            break;
        case 'Last 14 days':
            startDate = new Date(today);
            startDate.setDate(today.getDate() - 13);
            break;
        case 'Last 30 days':
            startDate = new Date(today);
            startDate.setDate(today.getDate() - 29);
            break;
        case 'Last 60 days':
            startDate = new Date(today);
            startDate.setDate(today.getDate() - 59);
            break;
        case 'Last 90 days':
            startDate = new Date(today);
            startDate.setDate(today.getDate() - 89);
            break;
        default:
            // fallback to today for both if option unrecognized
            startDate = today;
            break;
    }

    // Format dates as MM/DD/YYYY
    const formatDate = (date: Date): string => {
        const mm = String(date.getMonth() + 1).padStart(2, '0');
        const dd = String(date.getDate()).padStart(2, '0');
        const yyyy = date.getFullYear();
        return `${mm}/${dd}/${yyyy}`;
    };

    return {
        startDate: formatDate(startDate),
        endDate: formatDate(endDate),
    };
}
